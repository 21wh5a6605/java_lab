12.Write a Java program that correctly implements the producer â€“ consumer problem using the concept of inter thread communication.

Program:

package multithreading;
import java.util.LinkedList;
public class ProducerAndConsumer {
	public static void main(String[] args) throws InterruptedException {
		final PC pc = new PC();
		Thread t1 = new Thread(new Runnable() {
			public void run() {
				try {
					pc.produce();
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		});
		Thread t2 = new Thread(new Runnable() {
			public void run() {
				try {
					pc.consume();
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		});
		t1.start();
		t2.start();
		t1.join();
		t2.join();
	}
public static class PC {
		LinkedList<Integer> list = new LinkedList<Integer>();
		int capacity = 2;
		public void produce() throws InterruptedException {
			int value = 0;
			while (true) {
				synchronized (this) {
					while (list.size() == capacity)
						wait();
					System.out.println("Producer produced-" + value);
					list.add(value++);
					notify();
					Thread.sleep(1000);
				}
			}
		}
		public void consume() throws InterruptedException {
			while (true) {
				synchronized (this) {
					while (list.size() == 0)
					wait();
					int val = list.removeFirst();
					System.out.println("Consumer consumed-" + val);
					notify();
					Thread.sleep(1000);
				}
			}
		}
	}
}

Output:
Producer produced-0
Consumer consumed-0
Producer produced-1
Producer produced-2
Consumer consumed-1
Consumer consumed-2
Producer produced-3
Producer produced-4
Consumer consumed-3
Consumer consumed-4
Producer produced-5
Producer produced-6


